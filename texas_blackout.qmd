---
title: "texas_blackout"
format: html
editor_options: 
  chunk_output_type: console
---

## Setup

```{r}
#| message: false
#| warning: false

# Load required packages
library(tidyverse)
library(sf)
library(here)
library(terra)
library(stars)
library(tmap)
library(kableExtra)
```

## Data Loading and Preparation

```{r}
#| message: false
#| warning: false
# Read in the data

# Use rast() to read the night lights raster data tiles

VIIRS_07a <- rast(here("data/VNP46A1/VNP46A1.A2021038.h08v05.001.2021039064328.tif"))

VIIRS_07b <- rast(here("data/VNP46A1/VNP46A1.A2021038.h08v06.001.2021039064329.tif"))

VIIRS_16a <- rast(here("data/VNP46A1/VNP46A1.A2021047.h08v05.001.2021048091106.tif"))

VIIRS_16b <- rast(here("data/VNP46A1/VNP46A1.A2021047.h08v06.001.2021048091105.tif"))

# Use st_read() to read the gdb and gpkg files and query to extract only motorways and residential buildings

highways <- st_read(here("data/gis_osm_roads_free_1.gpkg/gis_osm_roads_free_1.gpkg"), 
                 query = "SELECT * FROM gis_osm_roads_free_1 WHERE fclass='motorway'")

houses <- st_read(here("data/gis_osm_buildings_a_free_1.gpkg/gis_osm_buildings_a_free_1.gpkg"), 
                  query = "SELECT *
FROM gis_osm_buildings_a_free_1
WHERE (type IS NULL AND name IS NULL)
OR type in ('residential', 'apartments', 'house', 'static_caravan', 'detached')")

socio <- st_read(here("data/ACS_2019_5YR_TRACT_48_TEXAS.gdb/ACS_2019_5YR_TRACT_48_TEXAS.gdb/"))
```

```{r}
# Make a data.frame containing the crs of the loaded datasets
crs_summary <- data.frame(
  Dataset = c("VIIRS tiles", "Highways", "Houses", "Socioeconomic"),
  EPSG = c(st_crs(VIIRS_07a)$epsg, 
           st_crs(highways)$epsg, 
           st_crs(houses)$epsg,
           st_crs(socio)$epsg))

# Display the crs
kable(crs_summary, 
      caption = "Coordinate Reference Systems of Input Data") %>% 
    kable_styling(bootstrap_options = c("striped", "hover"))
```

The socioeconomic data does not have a crs in its current form so we will have to extract the geometry and combine it with the relevant attributes

```{r}
#| message: false
#| warning: false

# Get the layers information
layers_info <- st_layers(here("data/ACS_2019_5YR_TRACT_48_TEXAS.gdb/ACS_2019_5YR_TRACT_48_TEXAS.gdb/"))

# Display as scrollable table with kableExtra
kable(data.frame(
  Layer_Number = 1:length(layers_info$name),
  Layer_Name = layers_info$name,
  Geometry_Type = unlist(layers_info$geomtype)  
), 
      caption = "Available Layers in ACS Geodatabase") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
                fixed_thead = TRUE) %>%
  scroll_box(height = "300px")
```

```{r}
#| message: false
#| warning: false

# Extract the geometry layer
socio_geom <- st_read(here("data/ACS_2019_5YR_TRACT_48_TEXAS.gdb/ACS_2019_5YR_TRACT_48_TEXAS.gdb/"), 
                      layer = "ACS_2019_5YR_TRACT_48_TEXAS")

# Extract the income layer
socio_income <- st_read(here("data/ACS_2019_5YR_TRACT_48_TEXAS.gdb/ACS_2019_5YR_TRACT_48_TEXAS.gdb/"), 
                        layer = "X19_INCOME")

# Rename the socio_income GEOID column to match the one in socio_geom
socio_income <- socio_income %>% 
  rename("GEOID_Data" = "GEOID")

# Join the income with the geometry by the GEOID_Data column
socio <- socio_geom %>% left_join(socio_income, by = "GEOID_Data") %>% 
  st_transform(st_crs(houses))

# Verify successful join
if(!("B19013e1" %in% names(socio))) {
  stop("Median household income (Estimate) column not found after join")
}
```

## Analysis

### Create blackout mask
Identify areas that experienced blackouts by comparing night light intensity before and after the storms.

```{r}
#| warning: false

# Merge the tiles for each date
VIIRS_07 <- merge(VIIRS_07a, VIIRS_07b)
VIIRS_16 <- merge(VIIRS_16a, VIIRS_16b)

# Calculate the difference in light intensity between the two dates
VIIRS_houston_diff <- VIIRS_07 - VIIRS_16

# Classify areas with light intensity drops greater than 200 as blackouts
blackout_mask <- classify(VIIRS_houston_diff,
                      matrix(c(-Inf, 200, NA,  # Not a blackout
                               200, Inf, 1),   # Balckout
                             ncol = 3, byrow = TRUE))
```

### Visualize the changes in night light

```{r}
# Replace non-positive values with NA
VIIRS_07[VIIRS_07 <= 0] <- NA
VIIRS_16[VIIRS_16 <= 0] <- NA

# Convert NA values to polygons
#na_polys <- r

plot(VIIRS_07) +
plot(VIIRS_16)

combined <- c(VIIRS_07, VIIRS_16)
names(combined) <- c("February 7, 2021", "February 16, 2021")



tm_shape(combined) +
  tm_raster(palette = "inferno",
            style = "quantile",
            n = 6,
            title = "Night Light Intensity\n(nW cm⁻² sr⁻¹)",
            colorNA = "black") +
  tm_layout(main.title = "Houston Night Lights: Before and After February 2021 Storm",
            main.title.size = 3,
            legend.outside = TRUE) +
  tm_facets(ncol = 2, free.scales = FALSE) +
  tm_graticules(lwd = 0.5)
  
```

```{r}
#| eval: false

# Check the actual data ranges
sum_07 <- summary(values(VIIRS_07))
sum_16 <- summary(values(VIIRS_16))

sum_07
sum_16

if (any(sum_16 > sum_07)) {
  stop(":(")
}

```

```{r}
#| warning: false

# Vectorize the blackout mask and fix any invalid geometries
blackout_vector <- st_as_stars(blackout_mask) %>% 
  st_as_sf(merge = TRUE) %>% 
  st_make_valid()

# Define a Houston bounding box using the provided coordinates
houston_bbox <- st_bbox(c(xmin = -96.5, ymin = 29, 
                          xmax = -94.5, ymax = 30.5), 
                        crs = st_crs(VIIRS_07))

# Crop the vectorized blackout mask to the Houston area
blackout_houston <- st_crop(blackout_vector, houston_bbox)

# Reproject to EPSG:3083 (NAD83 / Texas Centric Albers Equal Area)
blackout_houston <- st_transform(blackout_houston, crs = 3083)

# Verify cropping was successful
if(nrow(blackout_houston) == 0) {
  stop("No blackout areas remain after cropping to Houston")
}
```

```{r}
# Create cropped rasters for Houston bbox, then mask non-positive values
crop_07 <- crop(VIIRS_07, houston_bbox)
crop_16 <- crop(VIIRS_16, houston_bbox)

crop_07[crop_07 <= 0] <- NA
crop_16[crop_16 <= 0] <- NA

sum_07c <- summary(values(crop_07))
sum_16c <- summary(values(crop_16))

sum_07c
sum_16c

combined_crop <- c(crop_07, crop_16)
names(combined_crop) <- c("Before Storm", "After Storm")

tm_shape(combined_crop) +
  tm_raster(
    palette = "inferno",
    style = "quantile",
    n = 6,
    title = "Night Light Intensity\n(nW cm⁻² sr⁻¹)"
  ) +
  tm_facets(ncol = 2, free.scales = FALSE) +
  tm_layout(
    main.title = "Houston Night Lights Before and After Feb 2021 Blackout (Cropped)",
    main.title.size = 1.2,
    legend.outside = TRUE,
    legend.outside.position = "right",
    legend.title.size = 0.8,
    legend.text.size = 0.6,
    legend.bg = FALSE,
    legend.frame = FALSE,
    frame = FALSE
  ) +
  tm_graticules(lwd = 0.3, col = "grey70")
```


```{r}
tm_shape(blackout_houston) + 
  tm_polygons(col = "red",
              border.col = "darkred",
              title = "Blackout Areas") +
  tm_layout(main.title = "Initial Blackout Areas in Houston",
            main.title.size = 1.2,
            legend.show = FALSE) +
  tm_scale_bar(position = c("left", "bottom")) +
  tm_compass(position = c("right", "top"))
```

### Exclude highways from the cropped blackout mask
Highways may show reduced light intensity due to decreased traffic rather than power outages. We exclude areas within 200m of highways.


```{r}
#| warning: false

# Reproject highways to match blackout data (EPSG:3083)
highways <- st_transform(highways, crs = 3083)

# Join all the highway geometries into one and then buffer by 200m
highway_buffer <- highways %>% 
  st_union() %>% 
  st_buffer(dist = 200)

# Remove highway buffer zones from blackout areas
blackout_final <- st_difference(blackout_houston, highway_buffer)

# Verify data remains after highway exclusion
if(nrow(blackout_final) == 0) {
  warning("No blackout areas remain after excluding highways")
}
```

### Map blackout areas (highways excluded)

```{r}
tm_shape(highway_buffer) +
  tm_borders(col = "blue", col_alpha = 0.5, lwd = 1) +
tm_shape(blackout_final) +
  tm_polygons(col = "red",
              border.col = "darkred",
              title = "Blackout Area (>200 nW cm⁻² sr⁻¹ drop)") +
  tm_layout(main.title = "Houston Power Outage: Blackout Areas (Highways Excluded)",
            main.title.size = 1.2,
            legend.title.size = 1,
            legend.position = c("right", "bottom")) +
  tm_scale_bar(position = c("left", "bottom")) +
  tm_compass(position = c("right", "top")) +
  tm_add_legend(type = c("lines"),
                labels = c("Highway buffer (200m)"),
                col = c("blue")) +
  tm_add_legend(type = c("symbols"),
                labels = c("Blackout areas"),
                fill = c("red"),
                col = "darkred",
                size = 0.5)
```

### Identify the number of homes impacted by blackouts

```{r}
#| warning: false

# Reproject houses to match blackout crs (EPSG:3083)
houses <- st_transform(houses, crs = 3083)

# Extract homes that intersect blackout areas
blackout_homes <- st_intersection(houses, blackout_final)

# Calculate number of impacted homes
n_blackout_homes <- nrow(blackout_homes)
n_total_homes <- nrow(houses)
pct_impacted <- round((n_blackout_homes / n_total_homes) * 100, 1)
```

**Results:** Approximately **'r format(n_blackout_homes, big.mark = ",")'** homes (`r pct_impacted`% of residential buildings in the dataset) experienced blackouts during the February 2021 storms.

### Map impacted homes

```{r}
tm_shape(blackout_final) +
  tm_polygons(col = "grey80", 
              border.col = "grey60",
              title = "Blackout Area") +
  tm_shape(blackout_homes) +
  tm_dots(col = "red",
          alpha = 0.4,
          size = 0.01,
          title = "Homes Impacted") +
  tm_layout(main.title = "Homes in Houston Impacted by Blackouts",
            main.title.size = 1.2,
            legend.position = c("right", "bottom"),
            legend.title.size = 1) +
  tm_scale_bar(position = c("left", "bottom")) +
  tm_compass(position = c("right", "top"))
```

### Analyze census tracts
Investigate whether census tracts with different median household incomes experienced differential blackout impacts.

```{r}
#| warning: false

# Convert socio to EPSG:3083
socio <- st_transform(socio, st_crs(blackout_houston))

# Identify census tracts that intersect with blackout areas
tracts_blackout <- st_intersection(socio, blackout_final)

# Identify all tracts in Houston area
houston_tracts <- st_crop(socio, st_bbox(blackout_houston))

# Mark which tracts experienced blackouts using the intersection
houston_tracts$blackout <- houston_tracts$GEOID_Data %in% tracts_blackout$GEOID_Data

# Factorize logical values
houston_tracts$blackout <- factor(houston_tracts$blackout, levels = c("TRUE", "FALSE"))

sum(st_is_empty(houston_tracts))

# Verify median income data is available
if(sum(!is.na(houston_tracts$B19013e1)) == 0) {
  stop("No valid median income data found")
}
```

### Map of census tracts impacted by blackouts

```{r}
tm_shape(houston_tracts) +
  tm_polygons(col = "blackout",
              palette = c('TRUE' = "red", 'FALSE' = "grey80"),
              border.col = "white",
              lwd = 0.2,
              title = "Blackout Status\n(Yes/No, >200 nW cm⁻² sr⁻¹ drop)") +
  tm_layout(main.title = "Census Tracts in Houston by Blackout Status",
            main.title.size = 1.2,
            legend.outside = TRUE,
            legend.title.size = 1) +
  tm_scale_bar(position = c("left", "bottom")) +
  tm_compass(position = c("right", "top"))
```
### Compare income distributions

```{r fig-income, warning=FALSE, fig.width=8, fig.height=5}
# Create comparison plot
ggplot(houston_tracts %>% filter(!is.na(B19013e1)), 
       aes(x = blackout, y = B19013e1, fill = blackout)) +
  geom_boxplot(alpha = 0.7) +
  scale_fill_manual(
    name = "Blackout Status",
    values = c("TRUE" = "#D55E00", "FALSE" = "#999999"),
    labels = c("TRUE" = "Blackout", "FALSE" = "No Blackout")
  ) +
  scale_y_continuous(labels = scales::dollar_format()) +
  labs(
    title = "Median Household Income by Blackout Status",
    subtitle = "Houston Metropolitan Area Census Tracts",
    x = "Blackout Status",
    y = "Median Household Income (USD, 2019 ACS)",
    caption = "Source: U.S. Census Bureau ACS 5-Year Estimates (2015-2019)"
  ) +
  theme_minimal() +
  theme(
    legend.position = "right",
    plot.title = element_text(size = 14, face = "bold"),
    axis.title = element_text(size = 11)
  )
```

### Summary statistics

```{r income-summary}
income_stats <- houston_tracts %>%
  st_drop_geometry() %>%
  filter(!is.na(B19013e1)) %>%
  group_by(blackout) %>%
  summarise(
    `Number of Tracts` = n(),
    `Median Income` = median(B19013e1),
    `Mean Income` = mean(B19013e1),
    `SD Income` = sd(B19013e1)
  )

kable(income_stats, 
      caption = "Income Statistics by Blackout Status",
      digits = 0,
      format.args = list(big.mark = ",")) %>%
  kable_styling(bootstrap_options = c("striped", "hover"))
```

# Discussion and Limitations

## Key Findings

This analysis identified approximately **`r format(n_blackout_homes, big.mark = ",")`** homes in the Houston metropolitan area that likely experienced power outages during the February 2021 winter storms. By comparing night light intensity before (February 7) and after (February 16) the storms, we created a spatial mask of blackout areas and linked these to residential building locations.

The income analysis reveals that census tracts experiencing blackouts had a median household income of **$`r format(income_stats$"Median Income"[income_stats$blackout == "Blackout"], big.mark = ",")`**, compared to **$`r format(income_stats$"Median Income"[income_stats$blackout == "No Blackout"], big.mark = ",")`** for tracts without blackouts, suggesting [describe what the data shows about income disparities].
